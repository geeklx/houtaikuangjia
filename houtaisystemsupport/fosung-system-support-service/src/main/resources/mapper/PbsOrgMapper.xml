<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek.system.support.system.dao.pbs.PbsOrgDao">

    <resultMap id="orgMap" type="com.geek.system.support.system.entity.sys.SysOrgEntity">
        <result column="project_name" property="projectName"/>
        <result column="parent_name" property="parentName"/>
    </resultMap>
    
    <select id="queryOrgBylevel" parameterType="java.util.Map" resultType="java.util.Map">
        select id, leaf,level_type as "levelType", num, org_code as "orgCode", org_name as "orgName", org_type as "orgType",
        parent_id as "parentId", remark FROM sys_org
        where  del = false
        and org_code LIKE concat((select org_code from sys_org where id =#{param.parentId}),'%')
        <if test="param.levelType != null and param.levelType != ''">
            and level_type = #{param.levelType}
        </if>
        and org_type = #{param.orgType}
        and project_id = #{param.projectId}
        order by num
    </select>
    <select id="queryOrgCountBylevel" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(1) FROM
        (select id, leaf,level_type as "levelType", num, org_code as "orgCode", org_name as "orgName", org_type as "orgType",
        parent_id as "parentId", remark FROM sys_org
        where  del = false
        and org_code LIKE concat((select org_code from sys_org where id =#{param.parentId}),'%')
        <if test="param.levelType != null and param.levelType != ''">
            and level_type = #{param.levelType}
        </if>
        and org_type = #{param.orgType}
        and project_id = #{param.projectId}
        order by num) t
    </select>

    <select id="queryByPage" parameterType="java.util.Map" resultMap="orgMap">
        select a.*,b.project_name,c.org_name as parent_name from sys_org a
        left join sys_project b on a.project_id = b.id
        left join sys_org c on a.parent_id = c.id
        where a.del = FALSE
        and a.project_id = #{searchParam.projectId}
        <if test="searchParam.orgNameL != null and searchParam.orgNameL != ''">
            and a.org_name like concat('%',#{searchParam.orgNameL},'%')
        </if>
        <if test="searchParam.orgType != null and searchParam.orgType != '' ">
            and a.org_type = #{searchParam.orgType}
        </if>
        <if test="searchParam.orgCode != null and searchParam.orgCode != '' ">
            and a.org_code like concat(#{searchParam.orgCode},'%')
        </if>
        <if test="searchParam.levelType != null and searchParam.levelType != '' ">
            and a.level_type = #{searchParam.levelType}
        </if>
        <if test="searchParam.parentId != null and searchParam.parentId != '' ">
            and a.parent_id = #{searchParam.parentId}
        </if>
        order by a.num, a.id

    </select>
    <delete id="deleteByIds"  parameterType="java.util.Map">
        delete from sys_org
        where project_id = #{param.projectId}
        and id in
        <foreach collection="param.ids" item="id" separator="," open="(" close=")" >
            #{id}
        </foreach>
    </delete>

    <insert id="saveinfo">
        INSERT INTO sys_org
        (
        id,
        create_time,
        create_user_id,
        last_update_time,
        last_update_user_id,
        del,
        dt_org_code,
        dt_org_id,
        dt_org_name,
        has_children,
        leaf,
        level,
        level_type,
        num,
        org_code,
        org_name,
        org_type,
        parent_id,
        project_id,
        remark,
        source,
        source_name,
        status
        ) VALUES
        <foreach collection="infos" item="info" separator=",">
            (
            #{info.id},
            #{info.createDatetime},
            #{info.createUserId},
            #{info.lastUpdateDatetime},
            #{info.lastUpdateUserId},
            #{info.del},
            #{info.dtOrgCode},
            #{info.dtOrgId},
            #{info.dtOrgName},
            #{info.hasChildren},
            #{info.leaf},
            #{info.level},
            #{info.levelType},
            #{info.num},
            #{info.orgCode},
            #{info.orgName},
            #{info.orgType},
            #{info.parentId},
            #{info.projectId},
            #{info.remark},
            #{info.source},
            #{info.sourceName},
            #{info.status}
            )
        </foreach>

    </insert>
</mapper>